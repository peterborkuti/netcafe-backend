# set SPRING_DATASOURCE_URL=jdbc:postgresql:peter
spring.datasource.url={$SPRING_DATASOURCE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10

logging.level.org.springframework=INFO

spring.profiles.active=production

server.port=${PORT:5000}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
# creates tables based on entities
# For production, You should keep the value of this property to “validate”, and use a
# database migration tool like Flyway for managing changes in the database schema.
# https://www.callicoder.com/spring-boot-rest-api-tutorial-with-mysql-jpa-hibernate/
spring.jpa.hibernate.ddl-auto = update

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
spring.jpa.show-sql=true

#logging.level.org.springframework.transaction.interceptor=TRACE

# Error in console (but app starts)
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.data.rest.basePath=/api/v1/